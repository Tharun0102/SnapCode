public class Solution {
    public int solve(int A, ArrayList<Integer> B) {
        if(A < 3)
            return 0;
        long[] sum_till = new long[A];
        sum_till[0] = (long)B.get(0);
        for(int i = 1; i < A; i++)
            sum_till[i] = (long)B.get(i) + sum_till[i - 1];
        if(sum_till[A - 1] % 3 != 0)
            return 0;
        long total_sum = sum_till[A - 1];
        int [] ways = new int [A];
        long sum_backwards = 0;
        for(int i = A - 1; i >= 0; i--){
            sum_backwards = (long)B.get(i) + sum_backwards;
            if(sum_backwards == total_sum / 3)
                ways[i] = 1;
            else
                ways[i] = 0;
        }
        int [] sum_ways = new int[A];
        sum_ways[A - 1] = ways[A - 1];
        for(int i = A - 2; i >= 0; i--){
            sum_ways[i] = ways[i] + sum_ways[i + 1];
        }
        int ans = 0;
        for(int i = 0; i < A - 2; i++){
            if(sum_till[i] == total_sum / 3){
                ans = ans + sum_ways[i + 2];
            }
        }
        return ans;
    }
}
