bool isvalid(int x,int y,int A,int B)
{
    if(x<0||y<0||x==A||y==B)
    return 0;
    return 1;
}
int Solution::solve(int A, int B, vector<string> &s) {
   int dis[A][B];
   for(int i=0;i<A;i++)
   {
       for(int j=0;j<B;j++)
       {
           dis[i][j]=INT_MAX;
       }
   }
   deque<pair<int,int>> q;
   q.push_back({0,0});
   dis[0][0]=0;
   while(!q.empty())
   {
       auto curr=q.front();
       q.pop_front();
       int x=curr.first,y=curr.second;
      if(x==A-1&&y==B-1)
      return dis[x][y];
       if(isvalid(x-1,y,A,B))
       {
           if(s[x][y]=='U')
           {
               if(dis[x-1][y]>dis[x][y]){
                   dis[x-1][y]=dis[x][y];
                   q.push_front({x-1,y});
               }
           }
           else
           {
               if(dis[x-1][y]>dis[x][y]+1){
                   dis[x-1][y]=dis[x][y]+1;
                   q.push_back({x-1,y});
               }
           }
       }
       if(isvalid(x+1,y,A,B))
       {
           if(s[x][y]=='D')
           {
               if(dis[x+1][y]>dis[x][y]){
                   dis[x+1][y]=dis[x][y];
                   q.push_front({x+1,y});
               }
           }
           else
           {
               if(dis[x+1][y]>dis[x][y]+1){
                   dis[x+1][y]=dis[x][y]+1;
                   q.push_back({x+1,y});
               }
           }
       }
       if(isvalid(x,y-1,A,B))
       {
           if(s[x][y]=='L')
           {
               if(dis[x][y-1]>dis[x][y]){
                   dis[x][y-1]=dis[x][y];
                   q.push_front({x,y-1});
               }
           }
           else
           {
               if(dis[x][y-1]>dis[x][y]+1){
                   dis[x][y-1]=dis[x][y]+1;
                   q.push_back({x,y-1});
               }
           }
       }
       if(isvalid(x,y+1,A,B))
       {
           if(s[x][y]=='R')
           {
               if(dis[x][y+1]>dis[x][y]){
                   dis[x][y+1]=dis[x][y];
                   q.push_front({x,y+1});
               }
           }
           else
           {
               if(dis[x][y+1]>dis[x][y]+1){
                   dis[x][y+1]=dis[x][y]+1;
                   q.push_back({x,y+1});
               }
           }
       }
   }
//   for(int i=0;i<A;i++)
//   {
//       for(int j=0;j<B;j++)
//       {
//           cout<<dis[i][j]<<" ";
//       }
//       cout<<"\n";
//   }
   return INT_MAX;
}
