int find(int i1,int o)
{
    int i2=0;
    for(int i=0;i<32;i++)
    {
        if(o%2==0)
        {
            i2=i2+(i1&1)*(1<<i);
        }
        else
        {
            i2=i2+(!(i1&1))*(1<<i);
        }
        o/=2;
        i1/=2;
    }
    return i2;
}
int Solution::solve(vector<int> &A, int B) {
    unordered_map<int,int> m;
    int c=0;
    for(int i=0;i<A.size();i++)
    {
        int i2=find(A[i],B);
        if(m.count(i2))
        {
            if(m[i2]==0)
            continue;
            c++;
            m[i2]--;
        }
        else
        {
            m[A[i]]++;
        }
    }
    return c;
}
