int Solution::largestRectangleArea(vector<int> &A) {
    vector<int> R,L;
    stack<int> s;
    int n=A.size();
    R.push_back(n);
    s.push(n-1);
    for(int i=n-2;i>=0;i--)
    {
        while(s.size()&&A[s.top()]>=A[i])
        {
            s.pop();
        }
        if(s.empty())
        {
            R.push_back(n);
        }
        else
        {
            R.push_back(s.top());
        }
        s.push(i);
    }
    // return 0;
    reverse(R.begin(),R.end());
    // for(int i=0;i<n;i++)
    // cout<<R[i]<<" ";
    L.push_back(-1);
    while(s.size())s.pop();
    s.push(0);
    for(int i=1;i<n;i++)
    {
        while(s.size()&&A[s.top()]>=A[i])
        {
            s.pop();
        }
        if(s.empty())
        {
            L.push_back(-1);
        }
        else
        {
            L.push_back(s.top());
        }
        s.push(i);
    }
    int ans=0;
    for(int i=0;i<n;i++)
    {
        ans=max(ans,(R[i]-L[i]-1)*A[i]);
    }
    return ans;
}
