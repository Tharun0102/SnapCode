int Solution::diffPossible(const vector<int> &nums, int k) {
    map<int,int>mp,tp;
        sort(nums.begin(),nums.end());
        for(int i=0;i<nums.size();i++){
            mp[nums[i]]++;
        }
        tp=mp;
        int count =0;
        for(int i=0;i<nums.size()-1;i++){
            int temp = nums[i]+k;
            if(k==0){
                if(mp[temp]>1){
                    count++;
                    return 1;
                }
            }
            else if(mp[temp]!=0){
                return 1;
            }
        }
        return 0;
}
