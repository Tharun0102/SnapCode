/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
 void Sort(vector<int>&v, int n)
{
    int i, key, j;
    for (i = 1; i < n; i++)
    {
        key = v[i];
        j = i - 1;
 
        while (j >= 0 && v[j] > key)
        {
            v[j + 1] = v[j];
            j = j - 1;
        }
        v[j + 1] = key;
    }
}
 
 
ListNode* Solution::insertionSortList(ListNode* head) {
    vector<int>v;
       ListNode *temp=head,*temp2 = head;
        while(temp!=NULL){
            v.push_back(temp->val);
          temp = temp->next;
        }
        //sort(v.begin(),v.end());
        Sort(v,v.size());
        int i=0;
        while(temp2!=NULL){
          temp2->val = v[i];
            i++;
            temp2 = temp2->next;
        }
        return head; 
}
